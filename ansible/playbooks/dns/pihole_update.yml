- name: Check for Pi-hole updates and notify via Telegram
  hosts: dns
  become: yes

  vars:
    telegram_bot_token: "{{ lookup('env', 'TELEGRAM_BOT_TOKEN') }}"
    telegram_chat_id: "{{ lookup('env', 'TELEGRAM_CHAT_ID') }}"
    pihole_service_name: "pihole-FTL.service"

  tasks:
    - name: Gather service facts
      setup:
        filter: ansible_service_mgr
      register: service_facts

    - name: Check if Pi-hole service is running
      command: systemctl is-active {{ pihole_service_name }}
      register: pihole_service_status
      changed_when: false
      failed_when: pihole_service_status.rc != 0
      when: service_facts.ansible_facts.ansible_service_mgr == 'systemd'

    - name: Notify if Pi-hole service is not running
      debug:
        msg: "Pi-hole service is not running. Please start it."
      when: pihole_service_status is failed

    - name: Check for Pi-hole updates
      command: pihole -up --check-only
      register: pihole_update_result
      changed_when: "'update available' in pihole_update_result.stdout"
      when: pihole_service_status is succeeded

    - name: Send Telegram notification about updates
      telegram:
        token: "{{ telegram_bot_token }}"
        api_args:
          chat_id: "{{ telegram_chat_id }}"
          parse_mode: "markdown"
          text: |
            Pi-hole updates available:
            {% set core_line = pihole_update_result.stdout_lines | select('search', '^\\s*\\[i\\] Pi-hole Core:') | list | first %}
            Pi-hole Core: {{ core_line.split(':', 1)[1].strip() if core_line else '' }} {% if core_line and 'up to date' in core_line %}游릭{% elif core_line and 'update available' in core_line %}游리{% endif %}
            {% set web_interface_line = pihole_update_result.stdout_lines | select('search', '^\\s*\\[i\\] Web Interface:') | list | first %}
            Web Interface: {{ web_interface_line.split(':', 1)[1].strip() if web_interface_line else '' }} {% if web_interface_line and 'up to date' in web_interface_line %}游릭{% elif web_interface_line and 'update available' in web_interface_line %}游리{% endif %}
            {% set ftl_line = pihole_update_result.stdout_lines | select('search', '^\\s*\\[i\\] FTL:') | list | first %}
            FTL: {{ ftl_line.split(':', 1)[1].strip() if ftl_line else '' }} {% if ftl_line and 'up to date' in ftl_line %}游릭{% elif ftl_line and 'update available' in ftl_line %}游리{% endif %}
          disable_web_page_preview: true
          disable_notification: true
      when: pihole_update_result.changed and pihole_service_status is succeeded
